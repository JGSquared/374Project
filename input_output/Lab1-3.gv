digraph G{
rankdir=BT;
App [
shape="record",
label = "{App|+ command : String\l+ extensions : List\l|+ printFileName(Path) : void\l+ fileUpdated(Path) : void\l+ run(Path, AppLauncher) : void\l}"
];App -> Object [arrowhead="onormal", style="solid"];AppLauncher [
shape="record",
label = "{AppLauncher|- observers : List\l+ apps : List\l- processes : List\l- stop : boolean\l dir : Path\l watcher : WatchService\l| main(String) : void\l+ setProcesses(List) : void\l+ getProcesses() : List\l+ handleDirectoryEvent(String, Path) : void\l+ getApplicationsCount() : int\l+ isRunning() : boolean\l+ stopGracefully() : void\l# clearEverything() : void\l+ run() : void\l+ registerObserver(Observer) : void\l+ removeObserver(Observer) : void\l+ notifyObservers(String, Path) : void\l}"
];AppLauncher -> Thread [arrowhead="onormal", style="solid"];AppLauncher -> Subject [arrowhead="onormal", style="dashed"];EntryCreateHandler [
shape="record",
label = "{EntryCreateHandler|| update(String, Path, Object) : void\l+ update(String, Path, AppLauncher) : void\l}"
];EntryCreateHandler -> Object [arrowhead="onormal", style="solid"];EntryCreateHandler -> Observer [arrowhead="onormal", style="dashed"];EntryModifyHandler [
shape="record",
label = "{EntryModifyHandler|| update(String, Path, Object) : void\l+ update(String, Path, AppLauncher) : void\l}"
];EntryModifyHandler -> Object [arrowhead="onormal", style="solid"];EntryModifyHandler -> Observer [arrowhead="onormal", style="dashed"];EntryPrintFileNameHandler [
shape="record",
label = "{EntryPrintFileNameHandler|| update(String, Path, Object) : void\l+ update(String, Path, AppLauncher) : void\l}"
];EntryPrintFileNameHandler -> Object [arrowhead="onormal", style="solid"];EntryPrintFileNameHandler -> Observer [arrowhead="onormal", style="dashed"];HtmlApp [
shape="record",
label = "{HtmlApp||}"
];HtmlApp -> App [arrowhead="onormal", style="solid"];Observer [
shape="record",
label = "{Observer|| update(String, Path, Object) : void\l}"
];Observer -> Object [arrowhead="onormal", style="solid"];PictureApp [
shape="record",
label = "{PictureApp||+ fileUpdated(Path) : void\l}"
];PictureApp -> App [arrowhead="onormal", style="solid"];Subject [
shape="record",
label = "{Subject|| registerObserver(Observer) : void\l notifyObservers(String, Path) : void\l removeObserver(Observer) : void\l}"
];Subject -> Object [arrowhead="onormal", style="solid"];TxtApp [
shape="record",
label = "{TxtApp||}"
];TxtApp -> App [arrowhead="onormal", style="solid"];}