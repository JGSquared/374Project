digraph G{
rankdir=BT;
App [
shape="record",
label = "{App|| main(String) : void\l}"
];App -> DotGraphDesign [arrowhead="open", style="solid"];App -> ClassDesignParser [arrowhead="open", style="solid"];App -> IDesignParser [arrowhead="open", style="dashed"];App -> IGraphDesign [arrowhead="open", style="dashed"];ClassDesignParser [
shape="record",
label = "{ClassDesignParser|- parsedCode : HashMap\l|+ parse(String, IGraphDesign) : void\l}"
];ClassDesignParser -> IDesignParser [arrowhead="onormal", style="dashed"];ClassDesignParser -> ClassDeclarationVisitor [arrowhead="open", style="solid"];ClassDesignParser -> ClassFieldVisitor [arrowhead="open", style="solid"];ClassDesignParser -> ClassAssociationVisitor [arrowhead="open", style="solid"];ClassDesignParser -> ClassUsesVisitor [arrowhead="open", style="solid"];ClassDesignParser -> ClassMethodVisitor [arrowhead="open", style="solid"];ClassDesignParser -> IGraphDesign [arrowhead="open", style="dashed"];DotGraphDesign [
shape="record",
label = "{DotGraphDesign|- codeGetters : List\l- fp : FileProperties\l- sb : StringBuilder\l|+ useDefault() : void\l+ getGraphStringBuilder() : StringBuilder\l+ getCodeGetters() : List\l+ removeCodeGetter(AbstractGraphCode) : void\l+ addCodeGetter(AbstractGraphCode) : void\l+ generateGraph() : void\l+ closeGraph() : void\l+ initializeGraph() : void\l+ addGraphCode(HashMap) : void\l}"
];DotGraphDesign -> IGraphDesign [arrowhead="onormal", style="dashed"];DotGraphDesign -> GraphFieldCode [arrowhead="open", style="solid"];DotGraphDesign -> GraphClassCloserCode [arrowhead="open", style="solid"];DotGraphDesign -> GraphDeclarationCode [arrowhead="open", style="solid"];DotGraphDesign -> GraphMethodCode [arrowhead="open", style="solid"];DotGraphDesign -> GraphUsesCode [arrowhead="open", style="solid"];DotGraphDesign -> FileProperties [arrowhead="open", style="solid"];DotGraphDesign -> AbstractGraphCode [arrowhead="open", style="solid"];DotGraphDesign -> GraphExtensionAndImplementCode [arrowhead="open", style="solid"];FileProperties [
shape="record",
label = "{FileProperties|+ whiteList : List\l+ sdEditPath : String\l+ fileOut : String\l+ fileIn : String\l+ flags : String\l+ graphVizPath : String\l|}"
];MethodDesignParser [
shape="record",
label = "{MethodDesignParser| count : int\l DEFAULT_DEPTH : int\l- callDepth : int\l- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ parse(String, IGraphDesign) : void\l <clinit>() : void\l}"
];MethodDesignParser -> IDesignParser [arrowhead="onormal", style="dashed"];MethodDesignParser -> ClassSequenceVisitor [arrowhead="open", style="solid"];MethodDesignParser -> IGraphDesign [arrowhead="open", style="dashed"];SequenceGraphDesign [
shape="record",
label = "{SequenceGraphDesign|- codeGetters : List\l- fp : FileProperties\l- sb : StringBuilder\l|+ useDefault() : void\l+ removeCodeGetter(AbstractGraphCode) : void\l+ getCodeGetters() : List\l+ addCodeGetter(AbstractGraphCode) : void\l+ generateGraph() : void\l+ closeGraph() : void\l+ initializeGraph() : void\l+ addGraphCode(HashMap) : void\l}"
];SequenceGraphDesign -> IGraphDesign [arrowhead="onormal", style="dashed"];SequenceGraphDesign -> FileProperties [arrowhead="open", style="solid"];SequenceGraphDesign -> AbstractGraphCode [arrowhead="open", style="solid"];SequenceGraphDesign -> GraphSequenceNodeCode [arrowhead="open", style="solid"];SequenceGraphDesign -> GraphSequenceMethodCode [arrowhead="open", style="solid"];AbstractGraphCode [
shape="record",
label = "{AbstractGraphCode||# sortListByNum(ArrayList, int) : void\l# getCamelCase(String) : String\l# getAccessSymbol(int) : String\l# getName(String, String) : String\l getCode(HashMap) : String\l}"
];IDesignParser [
shape="record",
label = "{IDesignParser|| parse(String, IGraphDesign) : void\l}"
];IDesignParser -> IGraphDesign [arrowhead="open", style="dashed"];IGraphDesign [
shape="record",
label = "{IGraphDesign|| addGraphCode(HashMap) : void\l useDefault() : void\l removeCodeGetter(AbstractGraphCode) : void\l addCodeGetter(AbstractGraphCode) : void\l generateGraph() : void\l closeGraph() : void\l initializeGraph() : void\l}"
];IGraphDesign -> AbstractGraphCode [arrowhead="open", style="dashed"];GraphClassCloserCode [
shape="record",
label = "{GraphClassCloserCode||+ getCode(HashMap) : String\l}"
];GraphClassCloserCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphClassCloserCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphDeclarationCode [
shape="record",
label = "{GraphDeclarationCode||+ getCode(HashMap) : String\l}"
];GraphDeclarationCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphDeclarationCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphExtensionAndImplementCode [
shape="record",
label = "{GraphExtensionAndImplementCode||+ getCode(HashMap) : String\l}"
];GraphExtensionAndImplementCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphExtensionAndImplementCode -> FileProperties [arrowhead="open", style="solid"];GraphExtensionAndImplementCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphFieldCode [
shape="record",
label = "{GraphFieldCode||+ getCode(HashMap) : String\l}"
];GraphFieldCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphFieldCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphMethodCode [
shape="record",
label = "{GraphMethodCode||+ getCode(HashMap) : String\l}"
];GraphMethodCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphMethodCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphSequenceMethodCode [
shape="record",
label = "{GraphSequenceMethodCode| KEY_NAME : String\l|+ getCode(HashMap) : String\l}"
];GraphSequenceMethodCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphSequenceMethodCode -> FileProperties [arrowhead="open", style="solid"];GraphSequenceMethodCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphSequenceNodeCode [
shape="record",
label = "{GraphSequenceNodeCode| KEY_NAME : String\l|+ getCode(HashMap) : String\l}"
];GraphSequenceNodeCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphSequenceNodeCode -> FileProperties [arrowhead="open", style="solid"];GraphSequenceNodeCode -> AbstractGraphCode [arrowhead="open", style="solid"];GraphUsesCode [
shape="record",
label = "{GraphUsesCode||+ getCode(HashMap) : String\l}"
];GraphUsesCode -> AbstractGraphCode [arrowhead="onormal", style="solid"];GraphUsesCode -> FileProperties [arrowhead="open", style="solid"];GraphUsesCode -> AbstractGraphCode [arrowhead="open", style="solid"];ClassAssociationVisitor [
shape="record",
label = "{ClassAssociationVisitor|- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visitMethod(int, String, String, String, String) : MethodVisitor\l}"
];ClassAssociationVisitor -> MethodAssociationVisitor [arrowhead="open", style="solid"];ClassDeclarationVisitor [
shape="record",
label = "{ClassDeclarationVisitor|- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visit(int, int, String, String, String, String) : void\l}"
];ClassFieldVisitor [
shape="record",
label = "{ClassFieldVisitor|- fieldCounter : int\l- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visitField(int, String, String, String, Object) : FieldVisitor\l}"
];ClassMethodVisitor [
shape="record",
label = "{ClassMethodVisitor|- methodCounter : int\l- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visitMethod(int, String, String, String, String) : MethodVisitor\l}"
];ClassSequenceVisitor [
shape="record",
label = "{ClassSequenceVisitor|- argTypes : ArrayList\l- methodCalls : List\l- className : String\l- methodName : String\l- callDepth : int\l- parsedCode : HashMap\l|+ getMethodCalls() : List\l+ getParsedCode() : HashMap\l+ visit(int, int, String, String, String, String) : void\l+ visitMethod(int, String, String, String, String) : MethodVisitor\l}"
];ClassSequenceVisitor -> MethodSequenceVisitor [arrowhead="open", style="solid"];ClassUsesVisitor [
shape="record",
label = "{ClassUsesVisitor|- parsedCode : HashMap\l|+ visitMethod(int, String, String, String, String) : MethodVisitor\l}"
];ClassUsesVisitor -> MethodUsesVisitor [arrowhead="open", style="solid"];MethodAssociationVisitor [
shape="record",
label = "{MethodAssociationVisitor|- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visitMethodInsn(int, String, String, String, boolean) : void\l+ visitFieldInsn(int, String, String, String) : void\l}"
];MethodSequenceVisitor [
shape="record",
label = "{MethodSequenceVisitor|- methodCalls : List\l- className : String\l- callDepth : int\l- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visitMethodInsn(int, String, String, String, boolean) : void\l}"
];MethodSequenceVisitor -> ClassSequenceVisitor [arrowhead="open", style="solid"];MethodUsesVisitor [
shape="record",
label = "{MethodUsesVisitor|- parsedCode : HashMap\l|+ getParsedCode() : HashMap\l+ visitMethodInsn(int, String, String, String, boolean) : void\l}"
];}