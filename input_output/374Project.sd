digraph G{
rankdir=BT;
Menu [
shape="record",
color="",
label = "{Menu| serialVersionUID : long\l nameCounter : int\l base : String\l isHelpMenu : boolean\l- menuSerializedDataVersion : int\l tearOff : boolean\l items : Vector\l| <clinit>() : void\l getAccessibleChildIndex(MenuComponent) : int\l countItemsImpl() : int\l countItems() : int\l+ getItemCount() : int\l+ isTearOff() : boolean\l+ removeNotify() : void\l+ addNotify() : void\l constructComponentName() : String\l+ getAccessibleContext() : AccessibleContext\l+ paramString() : String\l initIDs() : void\l- writeObject(ObjectOutputStream) : void\l- readObject(ObjectInputStream) : void\l shortcuts() : Enumeration\l deleteShortcut(MenuShortcut) : void\l handleShortcut(KeyEvent) : boolean\l getShortcutMenuItem(MenuShortcut) : MenuItem\l+ removeAll() : void\l+ remove(int) : void\l+ remove(MenuComponent) : void\l+ insert(MenuItem, int) : void\l+ insert(String, int) : void\l+ addSeparator() : void\l+ insertSeparator(int) : void\l+ getItem(int) : MenuItem\l getItemImpl(int) : MenuItem\l+ add(MenuItem) : MenuItem\l+ add(String) : void\l}"
];Menu -> MenuItem [arrowhead="onormal", style="solid"];Menu -> MenuContainer [arrowhead="onormal", style="dashed"];Menu -> Accessible [arrowhead="onormal", style="dashed"];Menu -> MenuItem [arrowhead="open", style="solid", label=""];Menu -> AccessibleContext [arrowhead="open", style="solid", label=""];Menu -> Vector [arrowhead="open", style="solid", label=""];Menu -> MenuContainer [arrowhead="open", style="solid", label=""];Menu -> IllegalArgumentException [arrowhead="open", style="solid", label=""];Menu -> MenuComponentPeer [arrowhead="open", style="solid", label=""];Menu -> GraphicsEnvironment [arrowhead="open", style="dashed"];Menu -> Enumeration [arrowhead="open", style="dashed"];Menu -> AWTAccessor [arrowhead="open", style="dashed"];Menu -> MenuPeer [arrowhead="open", style="dashed"];Menu -> ObjectOutputStream [arrowhead="open", style="dashed"];Menu -> MenuComponent [arrowhead="open", style="dashed"];Menu -> Toolkit [arrowhead="open", style="dashed"];Menu -> ObjectInputStream [arrowhead="open", style="dashed"];Menu -> MenuShortcut [arrowhead="open", style="dashed"];Menu -> KeyEvent [arrowhead="open", style="dashed"];Label [
shape="record",
color="yellow",
label = "{Label\n\<\<Leaf\>\>| base : String\l alignment : int\l text : String\l RIGHT : int\l serialVersionUID : long\l nameCounter : int\l CENTER : int\l LEFT : int\l|+ setText(String) : void\l+ getText() : String\l setAlignment(int) : void\l+ getAlignment() : int\l+ addNotify() : void\l constructComponentName() : String\l- readObject(ObjectInputStream) : void\l# paramString() : String\l initIDs() : void\l+ getAccessibleContext() : AccessibleContext\l <clinit>() : void\l}"
];Label -> Component [arrowhead="onormal", style="solid"];Label -> Accessible [arrowhead="onormal", style="dashed"];Label -> IllegalArgumentException [arrowhead="open", style="solid", label=""];Label -> ComponentPeer [arrowhead="open", style="solid", label=""];Label -> Component [arrowhead="open", style="solid", label=""];Label -> AccessibleContext [arrowhead="open", style="solid", label=""];Label -> GraphicsEnvironment [arrowhead="open", style="dashed"];Label -> Toolkit [arrowhead="open", style="dashed"];Label -> ObjectInputStream [arrowhead="open", style="dashed"];Label -> LabelPeer [arrowhead="open", style="dashed"];Frame [
shape="record",
color="",
label = "{Frame| SE_RESIZE_CURSOR : int\l SW_RESIZE_CURSOR : int\l WAIT_CURSOR : int\l TEXT_CURSOR : int\l S_RESIZE_CURSOR : int\l N_RESIZE_CURSOR : int\l NE_RESIZE_CURSOR : int\l NW_RESIZE_CURSOR : int\l CROSSHAIR_CURSOR : int\l DEFAULT_CURSOR : int\l maximizedBounds : Rectangle\l MAXIMIZED_VERT : int\l MAXIMIZED_BOTH : int\l base : String\l ownedWindows : Vector\l- state : int\l mbManagement : boolean\l undecorated : boolean\l resizable : boolean\l menuBar : MenuBar\l title : String\l NORMAL : int\l MOVE_CURSOR : int\l MAXIMIZED_HORIZ : int\l ICONIFIED : int\l W_RESIZE_CURSOR : int\l HAND_CURSOR : int\l E_RESIZE_CURSOR : int\l nameCounter : int\l serialVersionUID : long\l- frameSerializedDataVersion : int\l| setCursor(int) : void\l# paramString() : String\l+ getIconImage() : Image\l+ setTitle(String) : void\l+ getTitle() : String\l+ addNotify() : void\l constructComponentName() : String\l- init(String, GraphicsConfiguration) : void\l postProcessKeyEvent(KeyEvent) : void\l+ remove(MenuComponent) : void\l+ removeNotify() : void\l+ setShape(Shape) : void\l+ setBackground(Color) : void\l+ isUndecorated() : boolean\l+ setOpacity(float) : void\l+ getMaximizedBounds() : Rectangle\l+ setUndecorated(boolean) : void\l+ setMaximizedBounds(Rectangle) : void\l getState() : int\l+ getExtendedState() : int\l+ setResizable(boolean) : void\l setState(int) : void\l+ setExtendedState(int) : void\l- isFrameStateSupported(int) : boolean\l+ setIconImage(Image) : void\l+ getMenuBar() : MenuBar\l+ setMenuBar(MenuBar) : void\l+ isResizable() : boolean\l- readObject(ObjectInputStream) : void\l- writeObject(ObjectOutputStream) : void\l getFrames() : Frame[]\l getCursorType() : int\l access$000(Frame) : int\l access$002(Frame, int) : int\l+ getAccessibleContext() : AccessibleContext\l initIDs() : void\l <clinit>() : void\l}"
];Frame -> Window [arrowhead="onormal", style="solid"];Frame -> MenuContainer [arrowhead="onormal", style="dashed"];Frame -> MenuBar [arrowhead="open", style="solid", label=""];Frame -> AccessibleContext [arrowhead="open", style="solid", label=""];Frame -> IllegalArgumentException [arrowhead="open", style="solid", label=""];Frame -> IllegalComponentStateException [arrowhead="open", style="solid", label=""];Frame -> Window [arrowhead="open", style="solid", label=""];Frame -> MenuContainer [arrowhead="open", style="solid", label=""];Frame -> ComponentPeer [arrowhead="open", style="solid", label=""];Frame -> Vector [arrowhead="open", style="solid", label=""];Frame -> Rectangle [arrowhead="open", style="solid", label=""];Frame -> GraphicsEnvironment [arrowhead="open", style="dashed"];Frame -> Cursor [arrowhead="open", style="dashed"];Frame -> AWTAccessor [arrowhead="open", style="dashed"];Frame -> SunToolkit [arrowhead="open", style="dashed"];Frame -> GraphicsConfiguration [arrowhead="open", style="dashed"];Frame -> KeyEvent [arrowhead="open", style="dashed"];Frame -> MenuComponent [arrowhead="open", style="dashed"];Frame -> Shape [arrowhead="open", style="dashed"];Frame -> Color [arrowhead="open", style="dashed"];Frame -> Image [arrowhead="open", style="dashed"];Frame -> ObjectInputStream [arrowhead="open", style="dashed"];Frame -> ObjectOutputStream [arrowhead="open", style="dashed"];Frame -> Frame [arrowhead="open", style="dashed"];Frame -> FramePeer [arrowhead="open", style="dashed"];Frame -> Toolkit [arrowhead="open", style="dashed"];Component [
shape="record",
color="yellow",
label = "{Component\n\<\<Component\>\>| parent : Container\l peer : ComponentPeer\l mixingLog : PlatformLogger\l focusLog : PlatformLogger\l width : int\l y : int\l x : int\l appContext : AppContext\l eventLog : PlatformLogger\l log : PlatformLogger\l ignoreRepaint : boolean\l graphicsConfig : GraphicsConfiguration\l bufferStrategy : BufferStrategy\l- focusable : boolean\l- nameExplicitlySet : boolean\l- name : String\l popups : Vector\l dropTarget : DropTarget\l valid : boolean\l enabled : boolean\l visible : boolean\l peerFont : Font\l font : Font\l locale : Locale\l cursor : Cursor\l height : int\l background : Color\l foreground : Color\l prefSize : Dimension\l componentListener : ComponentListener\l newEventsOnly : boolean\l componentOrientation : ComponentOrientation\l maxSizeSet : boolean\l keyListener : KeyListener\l hierarchyBoundsListener : HierarchyBoundsListener\l hierarchyListener : HierarchyListener\l focusListener : FocusListener\l maxSize : Dimension\l prefSizeSet : boolean\l FOCUS_TRAVERSABLE_UNKNOWN : int\l FOCUS_TRAVERSABLE_DEFAULT : int\l focusTraversalKeys : Set[]\l- isFocusTraversableOverridden : int\l- focusTraversalKeysEnabled : boolean\l focusTraversalKeyPropertyNames : String[]\l acc : AccessControlContext\l LOCK : Object\l minSizeSet : boolean\l minSize : Dimension\l FOCUS_TRAVERSABLE_SET : int\l itemListenerK : String\l keyListenerK : String\l mouseListenerK : String\l mouseMotionListenerK : String\l inputMethodListenerK : String\l hierarchyListenerK : String\l mouseWheelListenerK : String\l textListenerK : String\l ownedWindowK : String\l windowListenerK : String\l mouseMotionListener : MouseMotionListener\l mouseWheelListener : MouseWheelListener\l mouseListener : MouseListener\l focusListenerK : String\l componentListenerK : String\l containerListenerK : String\l actionListenerK : String\l adjustmentListenerK : String\l inputMethodListener : InputMethodListener\l windowClosingException : RuntimeException\l RIGHT_ALIGNMENT : float\l serialVersionUID : long\l- changeSupport : PropertyChangeSupport\l objectLock : Object\l isPacked : boolean\l- boundsOp : int\l compoundShape : Region\l mixingCutoutRegion : Region\l isAddNotifyComplete : boolean\l backgroundEraseDisabled : boolean\l hierarchyBoundsListenerK : String\l eventMask : long\l isInc : boolean\l windowStateListenerK : String\l windowFocusListenerK : String\l CENTER_ALIGNMENT : float\l BOTTOM_ALIGNMENT : float\l incRate : int\l TOP_ALIGNMENT : float\l LEFT_ALIGNMENT : float\l $assertionsDisabled : boolean\l accessibleContext : AccessibleContext\l- componentSerializedDataVersion : int\l- autoFocusTransferOnDisposal : boolean\l requestFocusController : RequestFocusController\l coalesceEventsParams : Class[]\l coalesceMap : Map\l coalescingEnabled : boolean\l eventCache : EventQueueItem[]\l|+ requestFocus() : void\l+ getFocusTraversalKeysEnabled() : boolean\l# requestFocus(boolean) : boolean\l requestFocus(CausedFocusEvent$Cause) : boolean\l+ requestFocusInWindow() : boolean\l requestFocus(boolean, CausedFocusEvent$Cause) : boolean\l requestFocusInWindow(CausedFocusEvent$Cause) : boolean\l+ getAlignmentX() : float\l+ getAlignmentY() : float\l+ getBaseline(int, int) : int\l+ getBaselineResizeBehavior() : Component$BaselineResizeBehavior\l minimumSize() : Dimension\l+ setMaximumSize(Dimension) : void\l+ isMaximumSizeSet() : boolean\l+ getMaximumSize() : Dimension\l+ doLayout() : void\l getFocusTraversalKeys_NoIDCheck(int) : Set\l layout() : void\l+ areFocusTraversalKeysSet(int) : boolean\l+ setFocusTraversalKeysEnabled(boolean) : void\l+ setFocusable(boolean) : void\l+ isFocusable() : boolean\l isFocusTraversable() : boolean\l lostFocus(Event, Object) : boolean\l setFocusTraversalKeys_NoIDCheck(int, Set) : void\l+ getFocusTraversalKeys(int) : Set\l+ setFocusTraversalKeys(int, Set) : void\l isFocusTraversableOverridden() : boolean\l+ removeNotify() : void\l gotFocus(Event, Object) : boolean\l+ getMousePosition() : Point\l isAutoFocusTransferOnDisposal() : boolean\l findUnderMouseInWindow(PointerInfo) : Component\l+ hasFocus() : boolean\l+ transferFocusUpCycle() : void\l setAutoFocusTransferOnDisposal(boolean) : void\l+ isFocusOwner() : boolean\l+ getParent() : Container\l+ setName(String) : void\l+ getName() : String\l constructComponentName() : String\l initializeFocusTraversalKeys() : void\l setBoundsOp(int) : void\l getBoundsOp() : int\l getAccessControlContext() : AccessControlContext\l getObjectLock() : Object\l pointRelativeToComponent(Point) : Point\l transferFocus(boolean) : boolean\l isVisible_NoClientCode() : boolean\l getNextFocusCandidate() : Component\l isRecursivelyVisible() : boolean\l+ transferFocusBackward() : void\l+ isDisplayable() : boolean\l transferFocusBackward(boolean) : boolean\l+ isVisible() : boolean\l getToolkitImpl() : Toolkit\l+ isValid() : boolean\l checkTreeLock() : void\l nextFocus() : void\l+ getToolkit() : Toolkit\l+ transferFocus() : void\l getTreeLock() : Object\l getTraversalRoot() : Container\l+ isFocusCycleRoot(Container) : boolean\l+ getFocusCycleRootAncestor() : Container\l setRequestFocusController(RequestFocusController) : void\l- isRequestFocusAccepted(boolean, boolean, CausedFocusEvent$Cause) : boolean\l updateGraphicsData(GraphicsConfiguration) : boolean\l checkGD(String) : void\l requestFocusHelper(boolean, boolean) : boolean\l getDropTarget() : DropTarget\l requestFocusHelper(boolean, boolean, CausedFocusEvent$Cause) : boolean\l+ getGraphicsConfiguration() : GraphicsConfiguration\l# requestFocusInWindow(boolean) : boolean\l getGraphicsConfiguration_NoClientCode() : GraphicsConfiguration\l requestFocusInWindow(boolean, CausedFocusEvent$Cause) : boolean\l setGraphicsConfiguration(GraphicsConfiguration) : void\l getParent_NoClientCode() : Container\l getContainer() : Container\l getPeer() : ComponentPeer\l setDropTarget(DropTarget) : void\l# coalesceEvents(AWTEvent, AWTEvent) : AWTEvent\l+ createVolatileImage(int, int) : VolatileImage\l# processEvent(AWTEvent) : void\l+ createVolatileImage(int, int, ImageCapabilities) : VolatileImage\l# processComponentEvent(ComponentEvent) : void\l+ prepareImage(Image, ImageObserver) : boolean\l+ prepareImage(Image, int, int, ImageObserver) : boolean\l+ getInputMethodRequests() : InputMethodRequests\l+ getInputContext() : InputContext\l enableEvents(long) : void\l disableEvents(long) : void\l- checkCoalescing() : boolean\l isCoalesceEventsOverriden(Class) : boolean\l isCoalescingEnabled() : boolean\l getBackBuffer() : Image\l getBufferStrategy() : BufferStrategy\l+ checkImage(Image, int, int, ImageObserver) : int\l+ checkImage(Image, ImageObserver) : int\l createBufferStrategy(int, BufferCapabilities) : void\l createBufferStrategy(int) : void\l+ repaint(long, int, int, int, int) : void\l+ print(Graphics) : void\l access$500(Class) : boolean\l <clinit>() : void\l+ repaint(int, int, int, int) : void\l access$100(Component) : Point\l access$400(Component) : Insets\l updateZOrder() : void\l access$002(Component, Region) : Region\l isMixingNeeded() : boolean\l+ createImage(int, int) : Image\l+ createImage(ImageProducer) : Image\l+ imageUpdate(Image, int, int, int, int, int) : boolean\l- getInsets_NoClientCode() : Insets\l printHeavyweightComponents(Graphics) : void\l lightweightPrint(Graphics) : void\l+ printAll(Graphics) : void\l- calculateCurrentShape() : Region\l applyCurrentShape() : void\l subtractAndApplyShape(Region) : void\l applyCurrentShapeBelowMe() : void\l subtractAndApplyShapeBelowMe() : void\l+ addNotify() : void\l mixOnShowing() : void\l mixOnHiding(boolean) : void\l+ getCursor() : Cursor\l mixOnReshaping() : void\l getCursor_NoClientCode() : Cursor\l mixOnZOrderChanging(int, int) : void\l mouseExit(Event, int, int) : boolean\l mixOnValidating() : void\l keyDown(Event, int) : boolean\l keyUp(Event, int) : boolean\l action(Event, Object) : boolean\l mouseDrag(Event, int, int) : boolean\l mouseUp(Event, int, int) : boolean\l mouseMove(Event, int, int) : boolean\l mouseEnter(Event, int, int) : boolean\l mouseDown(Event, int, int) : boolean\l+ paint(Graphics) : void\l+ isCursorSet() : boolean\l+ paintAll(Graphics) : void\l+ update(Graphics) : void\l paintHeavyweightComponents(Graphics) : void\l lightweightPaint(Graphics) : void\l+ repaint(long) : void\l+ repaint() : void\l applyCompoundShape(Region) : void\l- getAppliedShape() : Region\l areBoundsValid() : boolean\l getOpaqueShape() : Region\l getSiblingIndexAbove() : int\l+ validate() : void\l getLocationOnWindow() : Point\l# processHierarchyBoundsEvent(HierarchyEvent) : void\l getNormalShape() : Region\l handleEvent(Event) : boolean\l isNonOpaqueForMixing() : boolean\l# processInputMethodEvent(InputMethodEvent) : void\l# processHierarchyEvent(HierarchyEvent) : void\l getHWPeerAboveMe() : ComponentPeer\l# processMouseWheelEvent(MouseWheelEvent) : void\l getSiblingIndexBelow() : int\l postsOldMouseEvents() : boolean\l# processMouseEvent(MouseEvent) : void\l# processMouseMotionEvent(MouseEvent) : void\l# processFocusEvent(FocusEvent) : void\l# processKeyEvent(KeyEvent) : void\l updateCursorImmediately() : void\l+ revalidate() : void\l invalidateIfValid() : void\l invalidateParent() : void\l+ invalidate() : void\l+ setCursor(Cursor) : void\l+ getFontMetrics(Font) : FontMetrics\l getGraphics_NoClientCode() : Graphics\l+ getGraphics() : Graphics\l+ getHeight() : int\l+ getBounds(Rectangle) : Rectangle\l+ getSize(Dimension) : Dimension\l+ isOpaque() : boolean\l+ getLocation(Point) : Point\l+ setPreferredSize(Dimension) : void\l+ isLightweight() : boolean\l isInstanceOf(Object, String) : boolean\l+ getPreferredSize() : Dimension\l getAccessibleStateSet() : AccessibleStateSet\l+ isPreferredSizeSet() : boolean\l getAccessibleIndexInParent() : int\l+ setMinimumSize(Dimension) : void\l+ getAccessibleContext() : AccessibleContext\l preferredSize() : Dimension\l initIDs() : void\l getContainingWindow() : Window\l relocateComponent() : void\l canBeFocusOwnerRecursively() : boolean\l canBeFocusOwner() : boolean\l+ applyComponentOrientation(ComponentOrientation) : void\l+ setBounds(int, int, int, int) : void\l reshape(int, int, int, int) : void\l+ getBounds() : Rectangle\l bounds() : Rectangle\l- notifyNewBounds(boolean, boolean) : void\l- reshapeNativePeer(int, int, int, int, int) : void\l- repaintParentIfNeeded(int, int, int, int) : void\l+ getWidth() : int\l+ getY() : int\l+ getX() : int\l+ setBounds(Rectangle) : void\l+ isMinimumSizeSet() : boolean\l+ getMinimumSize() : Dimension\l show(boolean) : void\l show() : void\l clearMostRecentFocusOwnerOnHide() : void\l containsFocus() : boolean\l hide() : void\l clearCurrentFocusCycleRootOnHide() : void\l+ getForeground() : Color\l+ setForeground(Color) : void\l+ isForegroundSet() : boolean\l+ getBackground() : Color\l+ setBackground(Color) : void\l isEnabledImpl() : boolean\l+ isEnabled() : boolean\l+ isShowing() : boolean\l isSameOrAncestorOf(Component, boolean) : boolean\l disable() : void\l enable(boolean) : void\l enable() : void\l+ setEnabled(boolean) : void\l+ enableInputMethods(boolean) : void\l+ setVisible(boolean) : void\l+ isDoubleBuffered() : boolean\l+ setLocation(Point) : void\l- location_NoClientCode() : Point\l location() : Point\l move(int, int) : void\l+ setLocation(int, int) : void\l+ setSize(int, int) : void\l resize(int, int) : void\l+ setSize(Dimension) : void\l resize(Dimension) : void\l+ getSize() : Dimension\l size() : Dimension\l+ getLocale() : Locale\l+ isFontSet() : boolean\l+ setFont(Font) : void\l getFont_NoClientCode() : Font\l+ getFont() : Font\l+ isBackgroundSet() : boolean\l+ getLocationOnScreen() : Point\l getLocationOnScreen_NoTreeLock() : Point\l+ getColorModel() : ColorModel\l+ getLocation() : Point\l+ setLocale(Locale) : void\l+ addHierarchyBoundsListener(HierarchyBoundsListener) : void\l+ removeHierarchyBoundsListener(HierarchyBoundsListener) : void\l numListening(long) : int\l getComponentListeners() : ComponentListener[]\l removeFocusListener(FocusListener) : void\l addFocusListener(FocusListener) : void\l+ addHierarchyListener(HierarchyListener) : void\l getFocusListeners() : FocusListener[]\l getHierarchyListeners() : HierarchyListener[]\l+ removeHierarchyListener(HierarchyListener) : void\l removeMouseListener(MouseListener) : void\l getMouseListeners() : MouseListener[]\l adjustListeningChildrenOnParent(long, int) : void\l getHierarchyBoundsListeners() : HierarchyBoundsListener[]\l createHierarchyEvents(int, Component, Container, long, boolean) : int\l countHierarchyMembers() : int\l addMouseListener(MouseListener) : void\l getKeyListeners() : KeyListener[]\l removeKeyListener(KeyListener) : void\l addKeyListener(KeyListener) : void\l dispatchEvent(AWTEvent) : void\l+ getComponentAt(int, int) : Component\l locate(int, int) : Component\l+ getComponentAt(Point) : Component\l deliverEvent(Event) : void\l+ contains(int, int) : boolean\l+ getIgnoreRepaint() : boolean\l+ contains(Point) : boolean\l inside(int, int) : boolean\l+ setIgnoreRepaint(boolean) : void\l addComponentListener(ComponentListener) : void\l removeComponentListener(ComponentListener) : void\l eventTypeEnabled(int) : boolean\l postEvent(Event) : boolean\l eventEnabled(AWTEvent) : boolean\l areInputMethodsEnabled() : boolean\l checkWindowClosingException() : boolean\l dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l autoProcessMouseWheel(MouseWheelEvent) : void\l dispatchEventImpl(AWTEvent) : void\l+ toString() : String\l# paramString() : String\l+ list(PrintStream) : void\l+ list() : void\l+ remove(MenuComponent) : void\l+ add(PopupMenu) : void\l+ list(PrintStream, int) : void\l+ list(PrintWriter) : void\l+ list(PrintWriter, int) : void\l getNativeContainer() : Container\l# firePropertyChange(String, Object, Object) : void\l+ getPropertyChangeListeners(String) : PropertyChangeListener[]\l+ removePropertyChangeListener(String, PropertyChangeListener) : void\l+ addPropertyChangeListener(String, PropertyChangeListener) : void\l+ getPropertyChangeListeners() : PropertyChangeListener[]\l+ removePropertyChangeListener(PropertyChangeListener) : void\l+ addPropertyChangeListener(PropertyChangeListener) : void\l+ firePropertyChange(String, byte, byte) : void\l# firePropertyChange(String, boolean, boolean) : void\l# firePropertyChange(String, int, int) : void\l+ firePropertyChange(String, short, short) : void\l+ firePropertyChange(String, char, char) : void\l+ firePropertyChange(String, float, float) : void\l+ firePropertyChange(String, long, long) : void\l- doSwingSerialization() : void\l+ firePropertyChange(String, double, double) : void\l- readObject(ObjectInputStream) : void\l- writeObject(ObjectOutputStream) : void\l+ getListeners(Class) : EventListener[]\l getMouseWheelListeners() : MouseWheelListener[]\l addInputMethodListener(InputMethodListener) : void\l removeInputMethodListener(InputMethodListener) : void\l getInputMethodListeners() : InputMethodListener[]\l removeMouseMotionListener(MouseMotionListener) : void\l getMouseMotionListeners() : MouseMotionListener[]\l addMouseWheelListener(MouseWheelListener) : void\l removeMouseWheelListener(MouseWheelListener) : void\l+ setComponentOrientation(ComponentOrientation) : void\l+ getComponentOrientation() : ComponentOrientation\l addMouseMotionListener(MouseMotionListener) : void\l}"
];Component -> ImageObserver [arrowhead="onormal", style="dashed"];Component -> MenuContainer [arrowhead="onormal", style="dashed"];Component -> Serializable [arrowhead="onormal", style="dashed"];Component -> MouseListener [arrowhead="open", style="solid", label=""];Component -> ComponentEvent [arrowhead="open", style="solid", label=""];Component -> AccessibleStateSet [arrowhead="open", style="solid", label=""];Component -> HierarchyBoundsListener [arrowhead="open", style="solid", label=""];Component -> DropTarget [arrowhead="open", style="solid", label=""];Component -> Region [arrowhead="open", style="solid", label=""];Component -> PaintEvent [arrowhead="open", style="solid", label=""];Component -> MenuComponentPeer [arrowhead="open", style="solid", label=""];Component -> HierarchyEvent [arrowhead="open", style="solid", label=""];Component -> PropertyChangeSupport [arrowhead="open", style="solid", label=""];Component -> HashSet [arrowhead="open", style="solid", label=""];Component -> InternalError [arrowhead="open", style="solid", label=""];Component -> Vector [arrowhead="open", style="solid", label=""];Component -> Character [arrowhead="open", style="solid", label=""];Component -> MouseMotionListener [arrowhead="open", style="solid", label=""];Component -> MouseWheelListener [arrowhead="open", style="solid", label=""];Component -> ComponentListener [arrowhead="open", style="solid", label=""];Component -> Set[] [arrowhead="open", style="solid", label=""];Component -> AssertionError [arrowhead="open", style="solid", label=""];Component -> IllegalStateException [arrowhead="open", style="solid", label=""];Component -> Rectangle [arrowhead="open", style="solid", label=""];Component -> Class[] [arrowhead="open", style="solid", label=""];Component -> BufferStrategy [arrowhead="open", style="solid", label=""];Component -> AccessControlContext [arrowhead="open", style="solid", label=""];Component -> AccessibleContext [arrowhead="open", style="solid", label=""];Component -> HeadlessException [arrowhead="open", style="solid", label=""];Component -> GetPropertyAction [arrowhead="open", style="solid", label=""];Component -> ImageCapabilities [arrowhead="open", style="solid", label=""];Component -> Map [arrowhead="open", style="solid", label=""];Component -> PlatformLogger [arrowhead="open", style="solid", label=""];Component -> Container [arrowhead="open", style="solid", label=""];Component -> FocusEvent [arrowhead="open", style="solid", label=""];Component -> FocusListener [arrowhead="open", style="solid", label=""];Component -> MouseWheelEvent [arrowhead="open", style="solid", label=""];Component -> HierarchyListener [arrowhead="open", style="solid", label=""];Component -> IllegalArgumentException [arrowhead="open", style="solid", label=""];Component -> Dimension [arrowhead="open", style="solid", label=""];Component -> AccessibleState [arrowhead="open", style="solid", label=""];Component -> WeakHashMap [arrowhead="open", style="solid", label=""];Component -> IllegalComponentStateException [arrowhead="open", style="solid", label=""];Component -> Point [arrowhead="open", style="solid", label=""];Component -> BufferCapabilities [arrowhead="open", style="solid", label=""];Component -> String[] [arrowhead="open", style="solid", label=""];Component -> GraphicsConfiguration [arrowhead="open", style="solid", label=""];Component -> Cursor [arrowhead="open", style="solid", label=""];Component -> InputMethodListener [arrowhead="open", style="solid", label=""];Component -> NullPointerException [arrowhead="open", style="solid", label=""];Component -> Font [arrowhead="open", style="solid", label=""];Component -> RequestFocusController [arrowhead="open", style="solid", label=""];Component -> Locale [arrowhead="open", style="solid", label=""];Component -> Insets [arrowhead="open", style="solid", label=""];Component -> KeyListener [arrowhead="open", style="solid", label=""];Component -> ComponentOrientation [arrowhead="open", style="solid", label=""];Component -> AppContext [arrowhead="open", style="solid", label=""];Component -> Class [arrowhead="open", style="solid", label=""];Component -> SecurityException [arrowhead="open", style="solid", label=""];Component -> MenuContainer [arrowhead="open", style="solid", label=""];Component -> Color [arrowhead="open", style="solid", label=""];Component -> ComponentPeer [arrowhead="open", style="solid", label=""];Component -> RuntimeException [arrowhead="open", style="solid", label=""];Component -> GraphicsEnvironment [arrowhead="open", style="dashed"];Component -> AWTAccessor [arrowhead="open", style="dashed"];Component -> AWTKeyStroke [arrowhead="open", style="dashed"];Component -> Event [arrowhead="open", style="dashed"];Component -> EventQueue [arrowhead="open", style="dashed"];Component -> Iterator [arrowhead="open", style="dashed"];Component -> PointerInfo [arrowhead="open", style="dashed"];Component -> Graphics [arrowhead="open", style="dashed"];Component -> AWTEventMulticaster [arrowhead="open", style="dashed"];Component -> AccessController [arrowhead="open", style="dashed"];Component -> AWTEvent [arrowhead="open", style="dashed"];Component -> Image [arrowhead="open", style="dashed"];Component -> ImageObserver [arrowhead="open", style="dashed"];Component -> Component [arrowhead="open", style="dashed"];Component -> Dialog [arrowhead="open", style="dashed"];Component -> ImageProducer [arrowhead="open", style="dashed"];Component -> Package [arrowhead="open", style="dashed"];Component -> FocusTraversalPolicy [arrowhead="open", style="dashed"];Component -> FontDesignMetrics [arrowhead="open", style="dashed"];Component -> InputMethodEvent [arrowhead="open", style="dashed"];Component -> MouseEvent [arrowhead="open", style="dashed"];Component -> KeyEvent [arrowhead="open", style="dashed"];Component -> SunFontManager [arrowhead="open", style="dashed"];Component -> FontManagerFactory [arrowhead="open", style="dashed"];Component -> PopupMenu [arrowhead="open", style="dashed"];Component -> Accessible [arrowhead="open", style="dashed"];Component -> JComponent [arrowhead="open", style="dashed"];Component -> Boolean [arrowhead="open", style="dashed"];Component -> WindowClosingListener [arrowhead="open", style="dashed"];Component -> KeyboardFocusManager [arrowhead="open", style="dashed"];Component -> InputContext [arrowhead="open", style="dashed"];Component -> SunGraphicsEnvironment [arrowhead="open", style="dashed"];Component -> ColorModel [arrowhead="open", style="dashed"];Component -> SunToolkit [arrowhead="open", style="dashed"];Component -> AccessibleSelection [arrowhead="open", style="dashed"];Component -> Double [arrowhead="open", style="dashed"];Component -> Window [arrowhead="open", style="dashed"];Component -> Method [arrowhead="open", style="dashed"];Component -> Short [arrowhead="open", style="dashed"];Component -> EmbeddedFrame [arrowhead="open", style="dashed"];Component -> ObjectOutputStream [arrowhead="open", style="dashed"];Component -> Toolkit [arrowhead="open", style="dashed"];Component -> MouseInfoPeer [arrowhead="open", style="dashed"];Component -> SunDropTargetEvent [arrowhead="open", style="dashed"];Component -> GraphicsDevice [arrowhead="open", style="dashed"];Component -> Float [arrowhead="open", style="dashed"];Component -> MenuComponent [arrowhead="open", style="dashed"];Component -> PrintWriter [arrowhead="open", style="dashed"];Component -> PropertyChangeListener [arrowhead="open", style="dashed"];Component -> ConstrainableGraphics [arrowhead="open", style="dashed"];Component -> byte [arrowhead="open", style="dashed"];Component -> ContainerPeer [arrowhead="open", style="dashed"];Component -> short [arrowhead="open", style="dashed"];Component -> ObjectInputStream [arrowhead="open", style="dashed"];Component -> Byte [arrowhead="open", style="dashed"];Component -> Long [arrowhead="open", style="dashed"];Container [
shape="record",
color="yellow",
label = "{Container\n\<\<Composite\>\>|- dispatcher : LightweightDispatcher\l layoutMgr : LayoutManager\l- component : List\l EMPTY_ARRAY : Component[]\l printingThreads : Set\l- focusTraversalPolicyProvider : boolean\l- focusCycleRoot : boolean\l focusTraversalPolicy : FocusTraversalPolicy\l eventLog : PlatformLogger\l log : PlatformLogger\l numOfHWComponents : int\l INCLUDE_SELF : boolean\l SEARCH_HEAVYWEIGHTS : boolean\l- containerSerializedDataVersion : int\l modalAppContext : AppContext\l modalComp : Component\l descendUnconditionallyWhenValidating : boolean\l isJavaAwtSmartInvalidate : boolean\l serialPersistentFields : ObjectStreamField[]\l mixingLog : PlatformLogger\l numOfLWComponents : int\l descendantsCount : int\l listeningBoundsChildren : int\l serialVersionUID : long\l preserveBackgroundColor : Color\l printing : boolean\l listeningChildren : int\l containerListener : ContainerListener\l|+ setFocusTraversalKeys(int, Set) : void\l+ getFocusTraversalKeys(int) : Set\l+ areFocusTraversalKeysSet(int) : boolean\l+ isFocusCycleRoot(Container) : boolean\l- stopLWModal() : void\l# paramString() : String\l+ list(PrintStream, int) : void\l+ list(PrintWriter, int) : void\l- findTraversalRoot() : Container\l containsFocus() : boolean\l updateGraphicsData(GraphicsConfiguration) : boolean\l# addImpl(Component, Object, int) : void\l+ getInsets() : Insets\l getComponentsSync() : Component[]\l getComponents_NoClientCode() : Component[]\l+ getComponents() : Component[]\l+ getComponent(int) : Component\l countComponents() : int\l+ getComponentCount() : int\l initializeFocusTraversalKeys() : void\l initIDs() : void\l+ add(Component, Object, int) : void\l+ getComponentZOrder(Component) : int\l+ add(Component, Object) : void\l- reparentChild(Component) : void\l- addDelicately(Component, Container, int) : void\l+ setComponentZOrder(Component, int) : void\l- reparentTraverse(ContainerPeer, Container) : void\l getHeavyweightContainer() : Container\l isRemoveNotifyNeeded(Component, Container, Container) : boolean\l hasLightweightDescendants() : boolean\l canContainFocusOwner(Component) : boolean\l hasHeavyweightDescendants() : boolean\l- checkAddToSelf(Component) : void\l- checkNotAWindow(Component) : void\l- checkAdding(Component, int) : void\l- removeDelicately(Component, Container, int) : boolean\l insets() : Insets\l+ add(Component) : Component\l+ add(String, Component) : Component\l+ add(Component, int) : Component\l recursiveSubtractAndApplyShape(Region, int, int) : void\l recursiveApplyCurrentShape() : void\l recursiveApplyCurrentShape(int) : void\l recursiveApplyCurrentShape(int, int) : void\l mixOnHiding(boolean) : void\l mixOnShowing() : void\l- recursiveHideHeavyweightChildren() : void\l- recursiveShowHeavyweightChildren() : void\l isRecursivelyVisibleUpToHeavyweightContainer() : boolean\l- recursiveRelocateHeavyweightChildren(Point) : void\l getAccessibleChildrenCount() : int\l getAccessibleChild(int) : Accessible\l getAccessibleAt(Point) : Accessible\l recursiveSubtractAndApplyShape(Region, int) : void\l recursiveSubtractAndApplyShape(Region) : void\l getOpaqueShape() : Region\l- getBottommostComponentIndex() : int\l- getTopmostComponentIndex() : int\l decreaseComponentCount(Component) : void\l increaseComponentCount(Component) : void\l isFocusTraversalPolicyProvider() : boolean\l+ transferFocusDownCycle() : void\l postProcessKeyEvent(KeyEvent) : void\l preProcessKeyEvent(KeyEvent) : void\l+ applyComponentOrientation(ComponentOrientation) : void\l postsOldMouseEvents() : boolean\l+ addPropertyChangeListener(String, PropertyChangeListener) : void\l+ addPropertyChangeListener(PropertyChangeListener) : void\l- readObject(ObjectInputStream) : void\l- writeObject(ObjectOutputStream) : void\l- isParentOf(Component) : boolean\l setFocusTraversalPolicyProvider(boolean) : void\l+ setFocusTraversalPolicy(FocusTraversalPolicy) : void\l getTraversalRoot() : Container\l clearCurrentFocusCycleRootOnHide() : void\l clearMostRecentFocusOwnerOnHide() : void\l+ isFocusCycleRoot() : boolean\l+ setFocusCycleRoot(boolean) : void\l+ isFocusTraversalPolicySet() : boolean\l+ getFocusTraversalPolicy() : FocusTraversalPolicy\l+ getComponentAt(int, int) : Component\l locate(int, int) : Component\l+ getComponentAt(Point) : Component\l isSameOrAncestorOf(Component, boolean) : boolean\l+ getMousePosition(boolean) : Point\l findComponentAt(int, int, boolean) : Component\l+ findComponentAt(int, int) : Component\l+ findComponentAt(Point) : Component\l findComponentAtImpl(int, int, boolean) : Component\l+ removeNotify() : void\l+ addNotify() : void\l# processContainerEvent(ContainerEvent) : void\l dispatchEventImpl(AWTEvent) : void\l eventEnabled(AWTEvent) : boolean\l# processEvent(AWTEvent) : void\l getDropTargetEventTarget(int, int, boolean) : Component\l getMouseEventTarget(int, int, boolean) : Component\l dispatchEventToSelf(AWTEvent) : void\l deliverEvent(Event) : void\l proxyEnableEvents(long) : void\l- getMouseEventTargetImpl(int, int, boolean, Container$EventTargetFilter, boolean, boolean) : Component\l- getMouseEventTarget(int, int, boolean, Container$EventTargetFilter, boolean) : Component\l mixOnValidating() : void\l mixOnZOrderChanging(int, int) : void\l <clinit>() : void\l mixOnReshaping() : void\l+ isAncestorOf(Component) : boolean\l- startLWModal() : void\l+ getLayout() : LayoutManager\l createChildHierarchyEvents(int, long, boolean) : void\l+ doLayout() : void\l+ setLayout(LayoutManager) : void\l+ isValidateRoot() : boolean\l layout() : void\l invalidateParent() : void\l+ invalidate() : void\l+ validate() : void\l validateUnconditionally() : void\l# validateTree() : void\l+ removeAll() : void\l+ remove(Component) : void\l+ remove(int) : void\l checkGD(String) : void\l adjustDecendantsOnParent(int) : void\l adjustDescendants(int) : void\l adjustListeningChildren(long, int) : void\l numListening(long) : int\l- getListenersCount(int, boolean) : int\l createHierarchyEvents(int, Component, Container, long, boolean) : int\l countHierarchyMembers() : int\l+ printComponents(Graphics) : void\l+ paintComponents(Graphics) : void\l+ print(Graphics) : void\l paintHeavyweightComponents(Graphics) : void\l lightweightPaint(Graphics) : void\l addContainerListener(ContainerListener) : void\l removeContainerListener(ContainerListener) : void\l getContainerListeners() : ContainerListener[]\l+ getListeners(Class) : EventListener[]\l lightweightPrint(Graphics) : void\l printHeavyweightComponents(Graphics) : void\l minimumSize() : Dimension\l+ getMinimumSize() : Dimension\l preferredSize() : Dimension\l+ getPreferredSize() : Dimension\l+ setFont(Font) : void\l invalidateTree() : void\l+ paint(Graphics) : void\l+ update(Graphics) : void\l+ getAlignmentX() : float\l+ getAlignmentY() : float\l+ getMaximumSize() : Dimension\l}"
];Container -> Component [arrowhead="onormal", style="solid"];Container -> Region [arrowhead="open", style="solid", label=""];Container -> IllegalArgumentException [arrowhead="open", style="solid", label=""];Container -> Component [arrowhead="open", style="solid", label=""];Container -> Dimension [arrowhead="open", style="solid", label=""];Container -> ArrayIndexOutOfBoundsException [arrowhead="open", style="solid", label=""];Container -> Point [arrowhead="open", style="solid", label=""];Container -> LightweightDispatcher [arrowhead="open", style="solid", label=""];Container -> HashSet [arrowhead="open", style="solid", label=""];Container -> LayoutManager [arrowhead="open", style="solid", label=""];Container -> Set[] [arrowhead="open", style="solid", label=""];Container -> IllegalStateException [arrowhead="open", style="solid", label=""];Container -> FocusTraversalPolicy [arrowhead="open", style="solid", label=""];Container -> Component[] [arrowhead="open", style="solid", label=""];Container -> HeadlessException [arrowhead="open", style="solid", label=""];Container -> Class [arrowhead="open", style="solid", label=""];Container -> ContainerListener [arrowhead="open", style="solid", label=""];Container -> Insets [arrowhead="open", style="solid", label=""];Container -> PeerEvent [arrowhead="open", style="solid", label=""];Container -> ContainerEvent [arrowhead="open", style="solid", label=""];Container -> ObjectStreamField [arrowhead="open", style="solid", label=""];Container -> AppContext [arrowhead="open", style="solid", label=""];Container -> PlatformLogger [arrowhead="open", style="solid", label=""];Container -> Color [arrowhead="open", style="solid", label=""];Container -> ComponentPeer [arrowhead="open", style="solid", label=""];Container -> ObjectStreamField[] [arrowhead="open", style="solid", label=""];Container -> RuntimeException [arrowhead="open", style="solid", label=""];Container -> GetBooleanAction [arrowhead="open", style="solid", label=""];Container -> GraphicsEnvironment [arrowhead="open", style="dashed"];Container -> AWTAccessor [arrowhead="open", style="dashed"];Container -> AccessibleContext [arrowhead="open", style="dashed"];Container -> Container [arrowhead="open", style="dashed"];Container -> PrintWriter [arrowhead="open", style="dashed"];Container -> DefaultFocusTraversalPolicy [arrowhead="open", style="dashed"];Container -> SunToolkit [arrowhead="open", style="dashed"];Container -> EventQueue [arrowhead="open", style="dashed"];Container -> Iterator [arrowhead="open", style="dashed"];Container -> GraphicsConfiguration [arrowhead="open", style="dashed"];Container -> Graphics [arrowhead="open", style="dashed"];Container -> AWTEventMulticaster [arrowhead="open", style="dashed"];Container -> ContainerPeer [arrowhead="open", style="dashed"];Container -> AccessController [arrowhead="open", style="dashed"];Container -> Window [arrowhead="open", style="dashed"];Container -> ObjectOutputStream [arrowhead="open", style="dashed"];Container -> Toolkit [arrowhead="open", style="dashed"];Container -> KeyEvent [arrowhead="open", style="dashed"];Container -> ComponentOrientation [arrowhead="open", style="dashed"];Container -> PropertyChangeListener [arrowhead="open", style="dashed"];Container -> ObjectInputStream [arrowhead="open", style="dashed"];Container -> AWTEvent [arrowhead="open", style="dashed"];Container -> LayoutManager2 [arrowhead="open", style="dashed"];Container -> Font [arrowhead="open", style="dashed"];Container -> Event [arrowhead="open", style="dashed"];Container -> GraphicsDevice [arrowhead="open", style="dashed"];Container -> SequencedEvent [arrowhead="open", style="dashed"];Container -> PointerInfo [arrowhead="open", style="dashed"];Container -> Runnable [arrowhead="open", style="dashed"];Container -> JInternalFrame [arrowhead="open", style="dashed"];Container -> Accessible [arrowhead="open", style="dashed"];Container -> Boolean [arrowhead="open", style="dashed"];Container -> KeyboardFocusManager [arrowhead="open", style="dashed"];Container -> AccessibleComponent [arrowhead="open", style="dashed"];Point [
shape="record",
color="",
label = "{Point| serialVersionUID : long\l+ y : int\l+ x : int\l|+ move(int, int) : void\l+ setLocation(double, double) : void\l+ setLocation(int, int) : void\l+ setLocation(Point) : void\l+ getLocation() : Point\l+ getY() : double\l+ getX() : double\l+ translate(int, int) : void\l+ equals(Object) : boolean\l+ toString() : String\l}"
];Point -> Point2D [arrowhead="onormal", style="solid"];Point -> Serializable [arrowhead="onormal", style="dashed"];Point -> Point2D [arrowhead="open", style="solid", label=""];Point -> Point [arrowhead="open", style="dashed"];Point -> Math [arrowhead="open", style="dashed"];Point -> Class [arrowhead="open", style="dashed"];}